{"version":3,"sources":["modules/counter.js","component/AddList.js","component/AddCard.js","component/CardSetting.js","component/ReadCard.js","component/PrintMenu.js","component/ReadList.js","App.js","index.js"],"names":["LIST_ADD","LIST_REMOVE","CARD_ADD","COPY_LIST","MOVE_LIST","CARD_DES","CARD_COM","list_add","data","type","list_remove","card_add","copy_list","move_list","listdata","card_des","listno","cardno","card_com","initialState","maxNo","lists","store","createStore","state","action","maxno","push","listtitle","cardMaxno","cards","map","element","index","splice","i","length","carddata","text","cardmaxno","cardNo","cardtitle","copydata","copycard","copymaxno","movedata","carddes","cardcom","AddList","props","handleChange","event","setState","target","value","handleSubmit","e","preventDefault","dispatch","condition","test","classname","this","className","title","onClick","onSubmit","placeholder","onChange","Component","AddCard","btnCange","btndata","rowsvalue","cols","rows","CardSetting","textChange","id","cardDescrip","cardComment","textSubmit","descripstate","comSubmit","Comments","dateChange","date","Date","timepicker","bind","d","k","getMonth","getFullYear","getDate","src","selected","inline","showTimeSelect","ReadCard","cardtype","console","log","datas","key","PrintMenu","changeType","menu","archiveList","item","addCard","copyList","moveList","document","getElementById","selectbox","storestate","getState","selectdata","whith","style","left","position","name","ReadList","readList","subscribe","App","href","ReactDOM","render"],"mappings":"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","file":"static/js/main.7c77c5e1.chunk.js","sourcesContent":["import {createStore} from 'redux';\r\nimport { stat } from 'fs';\r\n\r\nconst LIST_ADD = 'LISTADD';\r\nconst LIST_REMOVE = 'LISTREMOVE';\r\nconst CARD_ADD = 'CARDADD';\r\nconst COPY_LIST = 'COPYLIST';\r\nconst MOVE_LIST = 'MOVELIST';\r\nconst CARD_DES = 'CARDDES';\r\nconst CARD_COM = 'CARDCOM';\r\n\r\nexport const list_add = (data) => ({\r\n    type: LIST_ADD,\r\n    data\r\n});\r\n\r\nexport const list_remove = (data) => ({\r\n    type: LIST_REMOVE,\r\n    data\r\n});\r\n\r\nexport const card_add = (data) => ({\r\n    type: CARD_ADD,\r\n    data\r\n});\r\n\r\nexport const copy_list = (data) => ({\r\n    type: COPY_LIST,\r\n    data\r\n});\r\n\r\nexport const move_list = (data, listdata) => ({\r\n    type: MOVE_LIST,\r\n    data,\r\n    listdata\r\n})\r\nexport const card_des = (data, listno, cardno) => ({\r\n    type: CARD_DES,\r\n    data,\r\n    listno,\r\n    cardno\r\n})\r\n\r\nexport const card_com = (data, listno, cardno) => ({\r\n    type: CARD_COM,\r\n    data,\r\n    listno,\r\n    cardno\r\n})\r\n\r\nvar initialState = {\r\n    maxNo: 1,\r\n    lists: [\r\n        \r\n    ]\r\n};\r\n//reducer 함수 생성\r\nfunction reducer(state = initialState, action){\r\n    const lists = state.lists; \r\n    switch(action.type){\r\n        case LIST_ADD:            \r\n            const data = action.data;\r\n            const maxno = state.maxNo;\r\n            //let listdata = { maxNo: maxno + 1, lists : lists.concat({listno : maxno, listtitle: data, cardMaxno: 1, cards : []})}\r\n            lists.push({listno : maxno, listtitle: data, cardMaxno: 1, cards : []});\r\n            state.maxNo = maxno + 1;\r\n            return  state;\r\n        case LIST_REMOVE:            \r\n            lists.map(function(element, index){\r\n                if(element.listno === action.data.listno){\r\n                    state.lists.splice(index, 1)\r\n                }                            \r\n            });\r\n            for(var i = 0; i < lists.length; i++){\r\n                lists[i].listno = i + 1;\r\n            }            \r\n            return state;\r\n        case CARD_ADD:\r\n            const carddata = action.data.text;\r\n            const cardmaxno = lists[action.data.listno - 1].cardMaxno;\r\n            lists[action.data.listno-1].cards.push(\r\n                {cardNo : cardmaxno, cardtitle: carddata}\r\n            );\r\n            lists[action.data.listno-1].cardMaxno = cardmaxno + 1            \r\n            return state;\r\n        case COPY_LIST:\r\n            const copydata = action.data.listtitle;\r\n            const copycard = action.data.cards;\r\n            const copymaxno = state.maxNo;\r\n            lists.push({listno : copymaxno, listtitle: copydata, cardMaxno: copycard.length+1, cards : copycard});\r\n            state.maxNo = copymaxno + 1;\r\n            return state;\r\n        case MOVE_LIST:            \r\n            const movedata = lists.splice(action.listdata-1, 1);            \r\n            lists.splice(action.data-1, 0, {listno : movedata[0].listno, listtitle: movedata[0].listtitle, cardMaxno: movedata[0].cardMaxno, cards : movedata[0].cards});\r\n            for(var i = 0; i < lists.length; i++){\r\n                lists[i].listno = i + 1;\r\n            }\r\n            return state;\r\n        case CARD_DES:            \r\n            lists[action.listno-1].cards[action.cardno-1].carddes = action.data;            \r\n            return state;\r\n        case CARD_COM:\r\n            lists[action.listno-1].cards[action.cardno-1].push({cardcom: action.data});\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//store 생성\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport store, { list_add } from '../modules/counter';\r\n\r\n\r\nclass AddList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      condition: true,\r\n      test: false,\r\n      text: ''\r\n    };\r\n  }\r\n  //입력 바에 값이 입력 될 때마다 현재 입력된 값을 state에 저장\r\n  handleChange = (event) => {\r\n    this.setState({ text: event.target.value });\r\n  }\r\n  //add 버튼을 클릭하는 경우 현재 state에 저장된 값을 store의 state에 추가 및 입력 바를 리셋\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    store.dispatch(list_add(this.state.text));\r\n    this.setState({ condition: true, text: '' })\r\n  }\r\n  render() {\r\n    let classname = null;\r\n    if(this.state.condition === true){\r\n      classname = \"listadd\"\r\n    }\r\n    else if(this.state.condition === false){\r\n      classname = \"liststate\"\r\n    }\r\n    return <div className = {classname}>\r\n      {this.state.condition === true ?\r\n        (<div className = \"addbtn\" type=\"button\" title=\"addlist\" onClick={(e) => {\r\n          e.preventDefault();\r\n          this.setState({ condition: false });\r\n        }}>일정 추가</div>)\r\n        : (<form className = \"addform\" onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input className = \"listinput\" type=\"text\" placeholder=\"제목을 입력해주세요\" value={this.state.text} onChange={this.handleChange}></input>\r\n          </label>\r\n          <input className = \"addinput\" type=\"submit\" value=\"추가\" />\r\n          <div className = \"addexit\" onClick = {(e) =>{e.preventDefault(); this.setState({condition: true, text: ''})}}>x</div>\r\n        </form>)}\r\n    </div>;\r\n  }\r\n}\r\nexport default AddList;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport store, {card_add} from '../modules/counter';\r\n\r\nclass AddCard extends Component {    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          condition: true,\r\n          test : false,\r\n          text : '',\r\n          listno: this.props.listno,\r\n          rowsvalue : 2\r\n        };\r\n      }\r\n      // input 바에 값 입력 시 state에 값 저장\r\n      handleChange = (event) => {\r\n        this.setState({text : event.target.value});        \r\n      }\r\n      // add 버튼 클릭 시 현재 state에 저장된 text와 수정중인 listno를 전달\r\n      handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        store.dispatch(card_add(this.state));\r\n        this.setState({condition : true, text: ''})\r\n      }\r\n      //버튼의 상태를 변환하는 메서드\r\n      btnCange = () => {\r\n        let btndata = null;        \r\n        if (this.state.condition === true) {\r\n          btndata =\r\n            <button type=\"button\" title=\"addcard\" onClick={(e) => {\r\n              e.preventDefault();          \r\n              this.setState({ condition: false });\r\n            }}>add card</button>;\r\n        }\r\n        else if (this.state.condition === false){\r\n          btndata =\r\n          <div>\r\n            <form onSubmit = {this.handleSubmit}>\r\n              <label>\r\n                <input type =\"text\" placeholder =\"\" value = {this.state.text} onChange = {this.handleChange}></input>\r\n              </label>\r\n              <input type = \"submit\" value = \"submit\" />\r\n              </form>\r\n          </div>     \r\n        }\r\n        return btndata;\r\n      }\r\n    \r\n    render(){\r\n        let length = this.state.text.length;        \r\n        if (length / this.state.rowsvalue >= 34) {\r\n          const value = this.state.rowsvalue\r\n          this.setState({ rowsvalue: value + 1 });\r\n          \r\n        }\r\n        else if (35 * (this.state.rowsvalue - 2) > length) {\r\n          const value = length % this.state.rowsvalue;\r\n          this.setState({ rowsvalue: value });\r\n        }\r\n        \r\n        return <div className = \"cardarea\">\r\n          {this.state.condition === true ? \r\n          (<div className = \"addcard\" type=\"button\" title=\"addcard\" onClick={(e) => {\r\n            e.preventDefault();          \r\n            this.setState({ condition: false });\r\n          }}>카드 추가</div>)\r\n          : (<form className = \"addform\" onSubmit = {this.handleSubmit}>\r\n          <label>\r\n            <textarea className = \"listinput\" type =\"text\" placeholder =\"카드 이름을 입력해주세요\" cols =\"35\" rows = {this.state.rowsvalue} value = {this.state.text} onChange = {this.handleChange}></textarea>\r\n          </label>\r\n          <input className = \"addinput\" type = \"submit\" value = \"카드 추가\" />\r\n          <div className = \"addexit\" onClick = {(e) =>{e.preventDefault(); this.setState({condition: true, text: ''})}}>x</div>\r\n          </form>)\r\n          }\r\n        </div>\r\n    }\r\n}\r\nexport default AddCard;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport store, { card_des, card_com } from '../modules/counter';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nclass CardSetting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardtitle: this.props.cardtitle,\r\n      cardDescrip: \"\",\r\n      cardComment: \"\",\r\n      descripstate: true,\r\n      Comments : true,\r\n      timepicker : true,\r\n      rowsvalue: 0,\r\n      Date : new Date()\r\n    };\r\n    this.dateChange = this.dateChange.bind(this);\r\n  }\r\n  textChange = (e) => {    \r\n    if(e.target.id === \"textarea\"){\r\n      this.setState({ cardDescrip: e.target.value });\r\n    }\r\n    else if(e.target.id === \"comments\"){\r\n      this.setState({ cardComment: e.target.value });\r\n    }\r\n  }  \r\n  //add 버튼을 클릭하는 경우 현재 state에 저장된 값을 store의 state에 추가\r\n  textSubmit = (e) => {    \r\n    e.preventDefault();\r\n    store.dispatch(card_des(this.state.cardDescrip, this.props.listno, this.props.cardNo));\r\n    this.setState({descripstate : false});         \r\n  }\r\n  //덧글을 카드에 추가\r\n  comSubmit = (e) => {\r\n    e.preventDefault();\r\n    store.dispatch(card_com(this.state.cardComment, this.props.listno, this.props.cardNo));\r\n    this.setState({Comments : false});\r\n  }\r\n  dateChange = (date) => {\r\n    this.setState({Date : date});\r\n  }\r\n  render() {\r\n    // 입력한 텍스트 크기에 따라 textarea의 세로 크기를 확장 및 축소\r\n    let length = this.state.cardDescrip.length;    \r\n    if (length / this.state.rowsvalue >= 40) {\r\n      const value = this.state.rowsvalue\r\n      this.setState({ rowsvalue: value + 1 });\r\n    }\r\n    else if (40 * (this.state.rowsvalue - 1) > length) {\r\n      const value = length % this.state.rowsvalue;\r\n      this.setState({ rowsvalue: value });\r\n    }    \r\n    var d = this.state.Date;\r\n    var k = d.getMonth() + 1;\r\n    const date = d.getFullYear() + \"/\" + k + \"/\" + d.getDate()\r\n    \r\n    return <div className = \"cardsetting\">\r\n      <div>\r\n        <img src = \"./icon1.PNG\"></img>\r\n        {this.state.cardtitle}\r\n      </div>\r\n      <img src = \"./icon1.PNG\"></img>\r\n      {this.state.timepicker === true ?\r\n      (<div onClick = {(e) => {\r\n        e.preventDefault(); \r\n        this.setState({timepicker: false})}}>{date}</div>) \r\n      : (<div className = \"timePicker\">\r\n        <input value = {date}></input>\r\n        <DatePicker selected = {this.state.Date} onChange = {this.dateChange} inline showTimeSelect />\r\n        <button onClick = {(e) => {e.preventDefault(); this.setState({timepicker: true})}}>확인</button>\r\n      </div>)}      \r\n      <div>\r\n      <img src = \"./icon1.PNG\"></img>\r\n      {this.state.descripstate === true ?\r\n        (<h2 onClick={(e) => { e.preventDefault(); this.setState({ descripstate: false }) }}>입력해라</h2>)\r\n        : (<form onSubmit={this.textSubmit}>\r\n          <label>\r\n            <textarea id=\"textarea\" cols=\"40\" rows={this.state.rowsvalue} onChange={this.textChange}></textarea>\r\n          </label>\r\n          <input type=\"submit\" value=\"추가\"/>\r\n        </form>)}\r\n      </div>\r\n      <div>\r\n      <img src = \"./icon1.PNG\"></img>\r\n      {this.state.Comments === true ? \r\n      (<h2  onClick={(e) => { e.preventDefault(); this.setState({ Comments: false }) }}>입력해라</h2>) \r\n      : (<form onSubmit={this.comSubmit}>\r\n        <label>\r\n          <textarea id=\"comments\" cols=\"40\" rows={this.state.rowsvalue} onChange={this.textChange}></textarea>\r\n        </label>\r\n        <input type=\"submit\" value=\"추가\" onClick={(e) => { e.preventDefault(); this.setState({ Comments: true }) }} />\r\n      </form>)}\r\n      </div>\r\n      \r\n    </div>\r\n  }\r\n}\r\nexport default CardSetting;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport CardSetting from './CardSetting';\r\n\r\n\r\nclass ReadCard extends Component {\r\n    //store의 state 값이 변경될 때 마다 갱신하기 위해 생성자를 호출\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cardtype: true\r\n        };\r\n    }\r\n    render() {\r\n        console.log(this.props)\r\n        const datas = this.props.cards;\r\n        const listno = this.props.listno;\r\n        let ReadCard = datas.map(({ cardNo, cardtitle }) =>\r\n            <div key={cardNo}>                \r\n                <div className = \"cardtext\" onClick={(e) => { e.preventDefault(); this.setState({ cardtype: false }) }}>{cardtitle}</div>\r\n                {this.state.cardtype === false ?\r\n                    (<div className = \"boardbase\">\r\n                    <div className = \"cardboard\">                   \r\n                    <CardSetting cardNo={cardNo} cardtitle={cardtitle} listno={listno} >                      \r\n                    </CardSetting>\r\n                    <div className = \"cardexit\" onClick={(e) => { e.preventDefault(); this.setState({ cardtype: true }) }}>X</div>\r\n                    </div></div>)\r\n                    : (<div></div>)}\r\n            </div>)\r\n        return ReadCard;\r\n    }\r\n}\r\n\r\nexport default ReadCard;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport store, { list_remove, copy_list, move_list } from '../modules/counter';\r\n\r\nclass PrintMenu extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            storestate : store.getState(),\r\n            item : this.props.item,\r\n            index : this.props.index,\r\n            menu : true,\r\n            selectbox : true\r\n        }\r\n    }\r\n    //메뉴의 상태를 변경\r\n    changeType = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.menu === true){\r\n            this.setState({menu : false});            \r\n        }\r\n        else if(this.state.menu === false){\r\n            this.setState({menu : true})            \r\n        }\r\n    }\r\n    // 리스트 제거\r\n    archiveList = (e) =>{\r\n        e.preventDefault();\r\n        store.dispatch(list_remove(this.state.item));\r\n        this.setState({menu : true});\r\n    }\r\n    addCard = () =>{\r\n\r\n    }\r\n    // 리스트 복사 후 리스트 끝에 붙여 넣기를 실행\r\n    copyList = (e) =>{\r\n        e.preventDefault();\r\n        store.dispatch(copy_list(this.state.item));\r\n        this.setState({menu : true});\r\n    }\r\n    // 리스트를 원하는 위치로 이동\r\n    moveList = (e) =>{\r\n        e.preventDefault();\r\n        const target = document.getElementById(\"selbox\");        \r\n        store.dispatch(move_list(target.value, this.props.item.listno));\r\n        this.setState({selectbox : true})\r\n    }\r\n    render(){\r\n        var selectdata = this.state.storestate.lists.map((data) => {            \r\n            if (data.listno === this.state.index + 1){\r\n                return <option key = {data.listno} value = {data.listno} selected = \"selected\">{data.listno}(현재 리스트)</option>\r\n            }\r\n            else{\r\n                return <option key = {data.listno} value = {data.listno}>{data.listno}</option>\r\n            }\r\n             \r\n        });\r\n        var whith = this.props.item.listno-1;\r\n        console.log(whith);\r\n        var style = {\r\n            left: 240 + whith*280+'px'\r\n        }\r\n        var position = {left : 246 + whith*280+'px'} \r\n        return (\r\n            <div >                \r\n                <div className =\"listmenu\" style = {position} onClick = {this.changeType} >...</div> \r\n                {this.state.menu === false ? (<div className =\"menu\" style = {style}>\r\n                    <div className = \"menutitle\">리스트 관리</div>\r\n                    <div className = \"menuexit\" onClick = {this.changeType}>X</div>\r\n                    <div className = \"menubutton\" type = \"button\" onClick = {this.copyList}>리스트 복사</div>\r\n                    <div className = \"menubutton\" type = \"button\" onClick = {this.addCard}>카드 추가</div>\r\n                    {this.state.selectbox === true ? \r\n                    (<div className = \"menubutton\" type = \"button\" onClick = {(e) => {e.preventDefault(); this.setState({selectbox : false})}}>리스트 이동</div>) \r\n                    : (<div>\r\n                        <h2>원하는 위치로 이동해주세요</h2>\r\n                        <select id = \"selbox\" name = \"selbox\">{selectdata}\r\n                        </select>\r\n                        <button onClick ={this.moveList}>이동</button>\r\n                        </div>)}                    \r\n                    <div className = \"menubutton\" type = \"button\" onClick = {this.archiveList}>일정 완료</div>\r\n                </div>): (<div></div>)}\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default PrintMenu;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport store from '../modules/counter';\r\nimport AddCard from './AddCard';\r\nimport ReadCard from './ReadCard';\r\nimport PrintMenu from './PrintMenu';\r\n\r\nclass ReadList extends Component {\r\n    //store의 state 값이 변경될 때 마다 갱신하귀 위해 생성자를 호출\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listdata: store.getState()\r\n        }\r\n        //store 값이 변경 될 때 마다 setState를 실행하여 state 값을 갱신\r\n        store.subscribe(() => { \r\n            this.setState({ \r\n                listdata: store.getState()\r\n            }) \r\n            console.log(store.getState())\r\n        });\r\n        \r\n    }\r\n    //state에 저장된 값들을 읽어 list를 반환\r\n    readList = () => {\r\n        const datas = this.state.listdata;\r\n        return datas.lists.map((item, index) =>\r\n        {            \r\n            return (\r\n            <div className = \"listObject\" key={item.listno}>                \r\n                <div className = \"listname\">\r\n                    <h2>{item.listtitle}</h2>                    \r\n                </div>\r\n                <PrintMenu item ={item} index = {index}></PrintMenu>\r\n                <ReadCard cards = {item.cards} listno = {item.listno}></ReadCard>\r\n                <AddCard listno = {item.listno}></AddCard>\r\n            </div>)\r\n        })\r\n    }\r\n    render() {        \r\n        let readList = this.readList();        \r\n        return readList;\r\n    }\r\n}\r\nexport default ReadList;","import React from 'react';\nimport { Component } from 'react';\nimport './App.css';\nimport AddList from './component/AddList';\nimport ReadList from './component/ReadList';\n\nclass App extends Component {\n  componentDidMount(){\n    document.title = \"YounCalendar\"\n  }\n  render() {\n    return (      \n      <div className = \"mainpage\">\n        <div className = \"mainbar\">          \n          <a href = \"/\" className = \"logo\">\n            <div>\n              <span className = \"logo1\"></span>\n              <span className = \"logo2\"></span>\n            </div>            \n          </a>\n        </div>\n        <div className = \"board\">          \n          <ReadList></ReadList>\n          <AddList></AddList>\n        </div>          \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}